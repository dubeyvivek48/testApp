{"version":3,"sources":["constant/Routes.js","constant/NavLink.js","components/Navbar.js","components/LIveConsulation.js","components/LandingComponent.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","navLink","title","link","upComing","Navbar","className","map","d","to","LiveConsultation","videos","class","src","playing","LandingComponent","useState","active","setActive","btnNextDisable","length","btnPreviousDisable","onClick","disabled","index","url","width","height","key","routes","path","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mOAAaA,G,YACD,KADCA,EAES,qBAFTA,EAGC,aCDDC,EAAS,CAClB,CACIC,MAAO,oBACPC,KAAKH,EACLI,UAAS,GAEb,CACIF,MAAO,YACPC,KAAKH,EACLI,UAAS,GAEb,CACIF,MAAO,aACPC,KDXO,cCYPC,UAAS,I,QCMFC,EAnBD,kBACN,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sBACVL,EAAQM,KAAI,SAAAC,GAAC,OACN,yBAAKF,WAAWE,EAAEJ,SAAW,SACzB,kBAAC,IAAD,CAAMK,GAAID,EAAEL,MACPK,EAAEJ,UAAY,0BAAME,UAAU,aAAhB,YACdE,EAAEN,WAKnB,yBAAKI,UAAU,aAAf,e,OCRLI,EANU,kBACrB,yBAAKJ,UAAU,OAAf,qB,yBCsBEK,EAAO,CACT,CACIC,MAAO,EACPC,IAAI,+BACJC,SAAQ,GAEZ,CACIF,MAAO,EACPC,IAAI,+BACJC,SAAQ,GAEZ,CACIF,MAAO,EACPC,IAAI,+BACJC,SAAQ,GAEZ,CACIF,MAAO,EACPC,IAAI,+BACJC,SAAQ,GAEZ,CACIF,MAAO,EACPC,IAAI,+BACJC,SAAQ,IA8DDC,EAzDS,WAAM,IAAD,EACEC,mBAAS,GADX,mBAClBC,EADkB,KACTC,EADS,KAGnBC,IAAkBF,EAASN,EAAOA,EAAOS,OAAO,GAAGR,OACnDS,IAAqBJ,EAAQN,EAAO,GAAGC,OAE5C,OACI,yBAAKN,UAAU,qBACX,0BAAMA,UAAU,gBAAhB,kBACA,mDACA,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,gBACX,yBACIA,UAAS,mBAAce,EAAqB,UAAW,IACvDC,QAAS,kBAAIJ,EAAUD,EAAO,IAC9BM,SAAUF,GAEV,yCAEJ,yBACIf,UAAS,eAAUa,EAAiB,UAAW,IAC/CG,QAAS,kBAAIJ,EAAUD,EAAS,IAChCM,SAAUJ,GAEV,wCALJ,OAOJ,yBAAKb,UAAU,YACTK,EAAOJ,KAAI,SAACC,EAAEgB,GAAH,OACL,yBAAKlB,UAAWE,EAAEI,QAAQK,EAAV,eAAoC,SAChD,kBAAC,IAAD,CACIQ,IAAKjB,EAAEK,IACPC,QAASN,EAAEM,QACXY,MAAO,MACPC,OAAQ,QACRrB,UAAU,kBACVsB,IAAKJ,UAO7B,0BAAMlB,UAAU,gBAAhB,gBACA,mDAEA,yBAAKA,UAAU,qBACVK,EAAOJ,KAAI,SAAAC,GAAC,OACT,yBACIF,UAAWE,EAAEI,QAAQK,EAAQ,eAAgB,QAC7CK,QAAS,kBAAIJ,EAAUV,EAAEI,SAC3BJ,EAAEI,aCjFViB,EAhBP,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAM9B,EAAe+B,OAAK,GAC7B,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAM9B,EAAyB+B,OAAK,GACvC,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAM9B,EAAiB+B,OAAK,GAC/B,0CAEJ,kBAAC,IAAD,cCFGC,MATf,WACE,OACM,kBAAC,IAAD,KACI,kBAAC,EAAD,MACCH,ICEOI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6d96089c.chunk.js","sourcesContent":["export const route= {\n    LANDING:'/',\n    LIVE_CONSULTATION:'/live-cuosultation',\n    BUY_PLANS:'/buy-plans',\n    VIEW_PLANS:'/view-plans',\n}\n","import {route} from \"./Routes\";\n\nexport const navLink= [\n    {\n        title: 'Live Consultation',\n        link:route.LIVE_CONSULTATION,\n        upComing:true,\n    },\n    {\n        title: 'Buy Plans',\n        link:route.BUY_PLANS,\n        upComing:false,\n    },\n    {\n        title: 'View Plans',\n        link:route.VIEW_PLANS,\n        upComing:false,\n    },\n];\n\n","import React from 'react';\nimport {navLink} from '../constant/NavLink'\nimport {Link} from \"react-router-dom\";\nconst  Navbar=()=> (\n        <div className='navbar-fixed'>\n            <div className=\"container\">\n                <div className=\"nav-link-container\">\n                    {navLink.map(d=>(\n                            <div className={d.upComing ? 'link':'link'}>\n                                <Link to={d.link}>\n                                    {d.upComing && <span className='up-coming'>Upcoming</span>}\n                                    {d.title}\n                                </Link>\n                            </div>\n                        )\n                    )}\n                    <div className=\"btn-login\"> login </div>\n                </div>\n            </div>\n        </div>\n    );\n\nexport default Navbar;\n","import React from 'react';\n\nconst  LiveConsultation =()=> (\n    <div className=\"App\">\n        LiveConsultation\n    </div>\n);\n\nexport default LiveConsultation;\n","import React, {useState} from \"react\";\nimport ReactPlayer from \"react-player\";\n\n\nconst responsive = {\n    superLargeDesktop: {\n        // the naming can be any, depends on you.\n        breakpoint: { max: 4000, min: 1600 },\n        items: 4\n    },\n    desktop: {\n        breakpoint: { max: 1600, min: 1024 },\n        items: 3\n    },\n    tablet: {\n        breakpoint: { max: 1024, min: 464 },\n        items: 2\n    },\n    mobile: {\n        breakpoint: { max: 464, min: 0 },\n        items: 1\n    }\n};\n\n\nconst videos=[\n    {\n        class: 5,\n        src:'https://youtu.be/r_z5ruH2kR4',\n        playing:false,\n    },\n    {\n        class: 6,\n        src:'https://youtu.be/4MqAuIhKipI',\n        playing:false,\n    },\n    {\n        class: 7,\n        src:'https://youtu.be/Ap7jgZAe2MY',\n        playing:false,\n    },\n    {\n        class: 8,\n        src:'https://youtu.be/Uqr3y-YBbMY',\n        playing:false,\n    },\n    {\n        class: 9,\n        src:'https://youtu.be/7-6lOTTGJ6Q',\n        playing:false,\n    }\n];\n\n\nconst LandingComponent= () =>{\n    const [active , setActive]=useState(9);\n\n    const btnNextDisable= !(active < videos[videos.length-1].class);\n    const btnPreviousDisable=!(active> videos[0].class);\n\n     return(\n         <div className=\"container landing\">\n             <span className=\"primary-text\">Concept Videos</span>\n             <span> Select a number </span>\n             <div className=\"carousel-container\">\n                 <div className=\"carousel-btn\">\n                     <div\n                         className={`previous ${btnPreviousDisable ? 'disable' :'' }`}\n                         onClick={()=>setActive(active-1)}\n                         disabled={btnPreviousDisable}\n                     >\n                         <span>&#8249;</span>\n                     </div>\n                     <div\n                         className={`next ${btnNextDisable ? 'disable' :''}`}\n                         onClick={()=>setActive(active + 1)}\n                         disabled={btnNextDisable}\n                     >\n                         <span>&#8249;</span>  </div>\n                 </div>\n                 <div className=\"carousel\">\n                     { videos.map((d,index)=>(\n                             <div className={d.class===active ? `active class` : 'class'}>\n                                 <ReactPlayer\n                                     url={d.src}\n                                     playing={d.playing}\n                                     width={'90%'}\n                                     height={'220px'}\n                                     className=\"video-container\"\n                                     key={index}\n                                 />\n                             </div>\n                         )\n                     )}\n                 </div>\n             </div>\n             <span className=\"primary-text\">Live classes</span>\n             <span> Select a number </span>\n\n             <div className=\"classes-container\">\n                 {videos.map(d=>(\n                     <div\n                         className={d.class===active? 'active class': 'class'}\n                         onClick={()=>setActive(d.class)}\n                     >{d.class}</div>\n                 ))}\n             </div>\n         </div>\n     )\n}\n\nexport default LandingComponent;\n","import {Route, Switch} from \"react-router-dom\";\nimport LiveConsultation from \"../components/LIveConsulation\";\nimport React from \"react\";\nimport {route} from \"../constant/Routes\";\nimport LandingComponent from \"../components/LandingComponent\";\n\nconst routes = (\n        <Switch>\n            <Route path={route.LANDING} exact>\n                <LandingComponent/>\n            </Route>\n            <Route path={route.LIVE_CONSULTATION} exact>\n                <LiveConsultation/>\n            </Route>\n            <Route path={route.BUY_PLANS} exact>\n                <h1>BUY_PLANS</h1>\n            </Route>\n            <Route>\n                404!\n            </Route>\n        </Switch>\n);\n\nexport default routes;\n","import React from 'react';\nimport './scss/main.scss'\nimport Navbar from \"./components/Navbar\";\nimport routes from \"./routes\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n  return (\n        <Router>\n            <Navbar/>\n            {routes}\n        </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}